worker_processes 1;

#error_log ${NGINX_LOGS}/app_proxy.log error;
error_log ${NGINX_LOGS}/app_proxy.log debug;

events {
  worker_connections  4096;  ## Default: 1024
}

http {
    
    #include    /etc/nginx/proxy.conf;
    #limit_req_zone $binary_remote_addr zone=one:10m rate=5r/s;
    server_tokens off;

    #sendfile on;
    keepalive_timeout 29; # Adjust to the lowest possible value that makes sense for your use case.
    client_body_timeout 10; client_header_timeout 10; send_timeout 10;

    # ssl optimization
    ssl_session_cache  shared:SSL:10m;
    ssl_session_timeout 10m;

    # Redirect all HTTP traffic to HTTPS
    server {
      listen *:80;
      add_header Strict-Transport-Security max-age=15768000;
      return 301 https://${DOLLAR}host${DOLLAR}request_uri;
    }
    
    # HTTPS Server
    server {
        listen *:443 ssl;
        
        # Server name. You need a DNS record (or add this hostname to your hosts file)
        server_name ${NGINX_HOST} www.${NGINX_HOST};
        keepalive_timeout 70;

        # Digital certificates
        ssl_certificate           ${NGINX_SSL}/${NGINX_HOST}.crt;
        ssl_certificate_key       ${NGINX_SSL}/${NGINX_HOST}.key;

        # SSL configuration
        ssl on;
        ssl_protocols TLSv1.1 TLSv1.2;
        #ssl_ciphers HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4;
        #pulled from https://docs.microsoft.com/en-us/aspnet/core/publishing/linuxproduction
        #add additional options later..
        ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
        ssl_ecdh_curve secp384r1;
        ssl_session_cache shared:SSL:10m;
        ssl_session_tickets off;

        # todo: turn this on..
        #ssl_stapling on; #ensure your cert is capable
        #ssl_stapling_verify on; #ensure your cert is capable
        ssl_prefer_server_ciphers on;

        add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";
        add_header              X-Frame-Options SAMEORIGIN;
        add_header              X-Content-Type-Options nosniff;

        # would like to use transparent flag on proxy_bind
        location / {
            proxy_pass          http://dotnet1:${APP_PORT};
            proxy_bind          ${DOLLAR}server_addr;
            proxy_read_timeout  90;
            proxy_set_header        Host ${DOLLAR}host;
            proxy_set_header        X-Real-IP ${DOLLAR}remote_addr;
            proxy_set_header        X-Forwarded-For ${DOLLAR}proxy_add_x_forwarded_for;
            proxy_set_header        X-Forwarded-Proto ${DOLLAR}scheme;       
            
            #Replace the Location and Refresh header returned from the proxied server.
            #proxy_redirect      http://localhost:${APP_PORT}/ https://${DOLLAR}host:${DOLLAR}server_port/;
        }
    }
}